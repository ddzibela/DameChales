@page "/foods"
@page "/foods/{Id:guid}"
@namespace DameChales.Web.App.Pages
@layout ListLayout
@using DameChales.Web.App.Resources.Texts
@using DameChales.Common.Models
@using DameChales.Common
@using Microsoft.Extensions.Localization
@inherits PageBase
@inject IStringLocalizer<FoodListPageResources> FoodListPageLocalizer

<div class="d-flex flex-row justify-content-between align-items-center mb-4">
    <h1>@FoodListPageLocalizer["Page_Title"]</h1>

    <div class="text-center">
        <OnlineStatusIndicator>
            <OnlineFragment>
                <NavLink href="@("/food/create")" class="btn btn-success">
                    @FoodListPageLocalizer["CreateNewFood_Button"]
                </NavLink>
            </OnlineFragment>
            <OfflineFragment>
                <h1>You are offline. Cannot create new food when offline!</h1>
            </OfflineFragment>
        </OnlineStatusIndicator>
    </div>
</div>

<!--FILTER-->
<!--Search-->
<EditForm Model="@FilterString">

    <h5 class="card-title">@FoodListPageLocalizer["Filter"]</h5>
    <!--ALERGENS-->
    <div class="form-group">

        @foreach (var alergen in Enum.GetNames(typeof(Common.Enums.Alergens)))
        {

            Common.Enums.Alergens a = (Common.Enums.Alergens)Enum.Parse(typeof(Common.Enums.Alergens), alergen);
            bool isChecked = false;

            @if (Alergens.Contains(a))
            {
                isChecked = true;

            }

            <div class="form-check form-check-inline">
                <input type="checkbox" class="form-check-input" @onchange="eventArgs => { CheckboxClicked(alergen, eventArgs.Value); }" checked="@isChecked" />
                @FoodListPageLocalizer[alergen.ToString()]
            </div>
        }

        @functions {
        void CheckboxClicked(string alergenStr, object checkedValue)
        {
            if ((bool)checkedValue)
            {
                Alergens.Add((Common.Enums.Alergens)Enum.Parse(typeof(Common.Enums.Alergens), alergenStr));
            }
            else
            {

                Alergens.Remove((Common.Enums.Alergens)Enum.Parse(typeof(Common.Enums.Alergens), alergenStr));
            }
        }
        }

        <div class="text-right">
            <button type="submit" class="btn btn-success" @onclick="@Filter">
                @FoodListPageLocalizer["search"]
            </button>
        </div>
    </div>

</EditForm>

<hr class="mt-1 py-20" />

<!--END OF FILTER-->

<button @onclick="@OrderByName">
    @FoodListPageLocalizer["Name"]
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-down" viewBox="0 0 16 16">
        @{
            if (OrderByNameFlag)
            {
                <path fill-rule="evenodd" d="M8 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L7.5 2.707V14.5a.5.5 0 0 0 .5.5z" />
            }
            else
            {
                <path fill-rule="evenodd" d="M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1z" />
            }
        }
    </svg>
</button>
<button @onclick="@OrderByPrice">
    @FoodListPageLocalizer["Price"]
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-down" viewBox="0 0 16 16">
        @{
            if (OrderByPriceFlag)
            {
                <path fill-rule="evenodd" d="M8 15a.5.5 0 0 0 .5-.5V2.707l3.146 3.147a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L7.5 2.707V14.5a.5.5 0 0 0 .5.5z" />
            }
            else
            {
                <path fill-rule="evenodd" d="M8 1a.5.5 0 0 1 .5.5v11.793l3.146-3.147a.5.5 0 0 1 .708.708l-4 4a.5.5 0 0 1-.708 0l-4-4a.5.5 0 0 1 .708-.708L7.5 13.293V1.5A.5.5 0 0 1 8 1z" />
            }
        }
    </svg>
</button>

<div class="d-flex flex-wrap">
    @foreach (var food in Foods)
    {
        <div class="card m-1" style="width: 16rem;">
            <img class="card-img-top" src="@food.PhotoURL" alt="Card image cap">
            <div class="card-body text-center">
                <h5 class="card-title">
                    @{
                        <span>@food.Name</span>
                    }
                </h5>

                <h6 class="card-title">
                    @{
                        <span>@food.Price</span>
                    }
                </h6>
                <a href="@($"/restaurants/{food.RestaurantGuid}")" class="btn btn-dark btn-block">
                    @FoodListPageLocalizer["GoToRestaurant_Button"]
                </a>
                <a href="@($"/food/{food.Id}")" class="btn btn-dark btn-block">
                        @FoodListPageLocalizer["EditFood_Button"]
                    </a>
                <p class="card-text">
                    @{
                        if (food.Id == Guid.Empty)
                        {
                            <p>Not Synced</p>
                        }
                    }
                </p>
            </div>
        </div>
    }
</div>